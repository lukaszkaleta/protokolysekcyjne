<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ra.dissection.protocol.dao.security.UserAccountMapper">

  <resultMap id="userAccountResultMap" type="com.ra.dissection.protocol.domain.security.UserAccount">
    <result column="username" property="username"/>
    <result column="password" property="password"/>
    <result column="enabled" property="enabled"/>
  </resultMap>

  <sql id="selectUserAccountSql">
    select username,password,enabled from security_user_account
  </sql>

  <insert id="insertUserAccount" useGeneratedKeys="true" parameterType="com.ra.dissection.protocol.domain.security.UserAccount" keyProperty="id" keyColumn="id">
    insert into security_user_account (username, password, enabled) values (#{username}, #{password}, #{enabled})
  </insert>

  <update id="updateUsername" parameterType="java.util.Map">
    update security_user_account set username = #{newUsername} where username = #{currentUsername}
  </update>

  <update id="updateUserPassword" parameterType="com.ra.dissection.protocol.domain.security.UserAccount">
    update security_user_account set password = #{password} where username = #{username}
  </update>

  <delete id="deleteUserAccount" parameterType="java.lang.String">
    delete from security_user_account where username = #{username}
  </delete>

  <select id="selectUserByUsername" parameterType="java.lang.String" resultType="com.ra.dissection.protocol.domain.security.UserAccount" resultMap="userAccountResultMap">
    <include refid="selectUserAccountSql"/> where username = #{username}
  </select>

  <select id="selectUserAccounts" resultType="com.ra.dissection.protocol.domain.security.UserAccount" resultMap="userAccountResultMap">
    <include refid="selectUserAccountSql"/>
  </select>

</mapper>